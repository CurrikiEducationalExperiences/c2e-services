# build.yml
on:
  # pull_request:
  #   paths:
  #     - '**'
  push:
    paths:
      - '**'
    branches: # array of glob patterns matching against refs/heads. Optional; defaults to all
      - develop # triggers on pushes that contain changes in develop
      - main # triggers on pushes that contain changes in main

name: Build

# https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html
env:
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_DEFAULT_OUTPUT: ${{ secrets.AWS_DEFAULT_OUTPUT }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ECR_USERNAME: ${{secrets.ECR_USERNAME}}
  ECR_ACCOUNT: ${{secrets.ECR_ACCOUNT}}
  CONTAINER_IMAGE: c2e-services:${{ github.sha }}
  AWS_ACCOUNT_ID: ${{secrets.AWS_ACCOUNT_ID}}
  EKS_CLUSTER_NAME: ${{secrets.EKS_CLUSTER_NAME}}
  PROJECT_NAME: c2e-services
  DB_HOST: ${{secrets.DB_HOST}}
  DB_USER: ${{secrets.DB_USER}}
  DB_DATABASE: ${{secrets.DB_DATABASE}}
  DB_PASS: ${{secrets.DB_PASS}}
  CONFIG_JS: ${{secrets.CONFIG_JS}}
  CONFIG_DEV_JS: ${{secrets.CONFIG_DEV_JS}}

jobs:
  build-and-push:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup ECR
        run: |
          # Login to AWS ECR
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username $ECR_USERNAME --password-stdin $ECR_ACCOUNT

      - name: Build and tag the image
        run: |
          # Build and tag the image

          if [ ${{ github.ref }} = 'refs/heads/develop' ]; then
            echo "$CONFIG_DEV_JS" > src/config.ts
          elif [ ${{ github.ref }} = 'refs/heads/main' ]; then
            echo "$CONFIG_JS" > src/config.ts
          else
            echo "No specific config."
          fi
          docker build \
            -t $CONTAINER_IMAGE \
            -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE \
            --build-arg DB_HOST=$DB_HOST \
            --build-arg DB_USER=$DB_USER \
            --build-arg DB_DATABASE=$DB_DATABASE \
            --build-arg DB_PASS=$DB_PASS ./

      - name: Push Image
        run: |
          # Push image to AWS ECR
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE

      - name: Deploy
        run: |
          # Deploy to Kubernetes
          export DOCKER_IMAGE_NAME=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE
          aws eks update-kubeconfig --name ${EKS_CLUSTER_NAME}
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
          if [ ${{ github.ref }} = 'refs/heads/develop' ]; then
            helm upgrade --namespace c2e-dev --install --debug ${PROJECT_NAME} charts/c2e-services -f ./charts/dev.yaml \
            --set image.repository=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE
          elif [ ${{ github.ref }} = 'refs/heads/main' ]; then
            helm upgrade --namespace c2e-prod --install --debug ${PROJECT_NAME} charts/c2e-services -f ./charts/prod.yaml \
            --set image.repository=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE
          else
            echo "No specific action defined for this branch."
          fi

